@using MySite.Models;

@inject HttpClient Http

<div class="modal" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Login</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => Close()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <EditForm EditContext="@loginEditContext" OnValidSubmit="Submit" class="formish">
                <DataAnnotationsValidator />
                <div class="modal-body">
                    <div class="mb-1">
                        <ValidationMessage For="@(() => loginInformation.Username)" />
                    </div>
                    <div class="mb-3"
                        <label for="Username" class="form-label">Username:</label>
                        <InputText id="Username" @bind-Value="loginInformation.Username" type="text" placeholder="Username" aria-label="Password" aria-describedby="basic-addon1" class="form-control"></InputText>
                    </div>
                    <div class="mb-3">
                        <label for="Password" class="form-label">Password:</label>
                        <div class="input-group">
                            <InputText id="Password" @bind-Value="loginInformation.Password" type="@PasswordVisibility" placeholder="Password" aria-label="Password" aria-describedby="basic-addon2" class="form-control"></InputText>
                            <button type="button" class="input-group-text" id="basic-addon2" @onclick="() => PasswordVisibilityChange()">
                                @if (PasswordVisibility == "password")
                                {
                                    <svg width="16" height="16" fill="currentColor" class="bi bi-eye-slash" viewBox="0 0 16 16">
                                        <path d="M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7 7 0 0 0-2.79.588l.77.771A6 6 0 0 1 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13 13 0 0 1 14.828 8q-.086.13-.195.288c-.335.48-.83 1.12-1.465 1.755q-.247.248-.517.486z" />
                                        <path d="M11.297 9.176a3.5 3.5 0 0 0-4.474-4.474l.823.823a2.5 2.5 0 0 1 2.829 2.829zm-2.943 1.299.822.822a3.5 3.5 0 0 1-4.474-4.474l.823.823a2.5 2.5 0 0 0 2.829 2.829" />
                                        <path d="M3.35 5.47q-.27.24-.518.487A13 13 0 0 0 1.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7 7 0 0 1 8 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709zm10.296 8.884-12-12 .708-.708 12 12z" />
                                    </svg>
                                }
                                else
                                {
                                    <svg width="16" height="16" fill="currentColor" class="bi bi-eye" viewBox="0 0 16 16">
                                        <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8M1.173 8a13 13 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5s3.879 1.168 5.168 2.457A13 13 0 0 1 14.828 8q-.086.13-.195.288c-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5s-3.879-1.168-5.168-2.457A13 13 0 0 1 1.172 8z" />
                                        <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5M4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0" />
                                    </svg>
                                }
                            </button>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <i class="bi bi-eye-slash"></i>
                </div>
             </EditForm>
        </div>
    </div>
</div>

@if (ShowBackdrop)
{
    <!-- Faded background <div class="modal-backdrop fade show"></div> -->
    <div class="modal-backdrop bg-light"></div>
}

@code {

    private MySite.Models.LoginInformation[]? logins;
    public LoginInformation loginInformation = new LoginInformation();
    public string ModalDisplay = "block";
    public string PasswordVisibility = "password";
    public bool ShowBackdrop = true;
    public EditContext? loginEditContext = null;

    protected override void OnInitialized()
    {
        loginEditContext = new EditContext(loginInformation);
    }

    protected override async Task OnInitializedAsync()
    {
        logins = await Http.GetFromJsonAsync<LoginInformation[]>("sample-data/logins.json");
    }

    /*
    public void Open()
    {
    ModalDisplay = "block";
    ShowBackdrop = true;
    StateHasChanged();
    }
    */

    public void Submit()
    {
        foreach(var login in logins!)
        {
            if (loginInformation.Username == login.Username && loginInformation.Password == login.Password)
            {
                Close();
                return;
            }
        }
        loginInformation.Username = string.Empty;
        loginInformation.Password = string.Empty;
        loginEditContext?.Validate();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ShowBackdrop = false;
        StateHasChanged();
    }

    public void PasswordVisibilityChange()
    {
        if(PasswordVisibility == "password")
        {
            PasswordVisibility = "text";
        }
        else
        {
            PasswordVisibility = "password";
        }
    }
}